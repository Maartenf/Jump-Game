/* 	islandManager.js
	======================================
	Creates, updates and draws islands
*/

var IslandManager = {

	//Store all islands
	islands: [],

	//Level data for all the islands
	islandTileMaps: [[[0,0,0,0,0,1,2,2,2,2,3,0,0,0,0,0,0,0,0,1,2,2,2,2,3,0,0,0,0,0],[0,0,0,0,0,4,5,5,5,5,6,0,0,0,0,0,0,0,0,4,5,5,5,5,6,0,0,0,0,0],[0,0,0,0,0,4,5,5,5,5,6,0,0,0,0,0,0,0,0,4,5,5,5,5,6,0,0,0,0,0],[0,0,0,0,0,4,5,5,5,5,6,0,0,0,0,0,0,0,0,4,5,5,5,5,6,0,0,0,0,0],[0,0,0,0,0,4,5,5,5,5,6,0,0,0,0,0,0,0,0,4,5,5,5,5,6,0,0,0,0,0],[0,0,0,0,0,4,5,5,5,5,6,0,0,0,0,0,0,0,0,4,5,5,5,5,6,0,0,0,0,0],[0,0,0,0,0,4,5,5,5,5,6,0,0,0,0,0,0,0,0,4,5,5,5,5,6,0,0,0,0,0],[0,0,0,0,0,4,5,5,5,5,6,0,0,0,0,0,0,0,0,4,5,5,5,5,6,0,0,0,0,0],[0,0,0,0,0,4,5,5,5,5,6,0,0,0,0,0,0,0,0,4,5,5,5,5,6,0,0,0,0,0],[0,0,0,0,0,7,8,8,8,8,9,0,0,0,0,0,0,0,0,7,8,8,8,8,9,0,0,0,0,0]],
					[[0,0,0,0,0,0,0,0,0,1,2,2,2,2,2,2,2,2,2,2,3,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,4,5,5,5,5,5,5,5,5,5,5,6,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,4,5,5,5,5,5,5,5,5,5,5,6,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,4,5,5,5,5,5,5,5,5,5,5,6,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,7,8,8,8,8,8,8,8,8,8,8,9,0,0,0,0,0,0,0,0,0]],
					[[0,0,1,2,2,2,2,3,0,0,0,1,2,2,2,2,2,2,3,0,0,0,1,2,2,2,2,3,0,0],[0,0,4,5,5,5,5,6,0,0,0,4,5,5,5,5,5,5,6,0,0,0,4,5,5,5,5,6,0,0],[0,0,4,5,5,5,5,6,0,0,0,4,5,5,5,5,5,5,6,0,0,0,4,5,5,5,5,6,0,0],[0,0,4,5,5,5,5,6,0,0,0,4,5,5,5,5,5,5,6,0,0,0,4,5,5,5,5,6,0,0],[0,0,4,5,5,5,5,6,0,0,0,4,5,5,5,5,5,5,6,0,0,0,4,5,5,5,5,6,0,0],[0,0,7,8,8,8,8,9,0,0,0,7,8,8,8,8,8,8,9,0,0,0,7,8,8,8,8,9,0,0]],
					[[0,0,1,2,2,2,2,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,2,2,2,3,0,0],[0,0,4,5,5,5,5,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,5,5,5,5,6,0,0],[0,0,4,5,5,5,5,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,5,5,5,5,6,0,0],[0,0,4,5,5,5,5,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,5,5,5,5,6,0,0],[0,0,7,8,8,8,8,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,8,8,8,8,9,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,1,2,2,2,2,2,3,0,0,0,0,1,2,2,2,2,2,3,0,0,0,0,0,0],[0,0,0,0,0,0,4,5,5,5,5,5,6,0,0,0,0,4,5,5,5,5,5,6,0,0,0,0,0,0],[0,0,0,0,0,0,4,5,5,5,5,5,6,0,0,0,0,4,5,5,5,5,5,6,0,0,0,0,0,0],[0,0,0,0,0,0,4,5,5,5,5,5,6,0,0,0,0,4,5,5,5,5,5,6,0,0,0,0,0,0],[0,0,0,0,0,0,7,8,8,8,8,8,9,0,0,0,0,7,8,8,8,8,8,9,0,0,0,0,0,0]],
					[[0,0,0,0,0,0,0,0,0,0,0,1,2,2,2,2,2,3,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,4,5,5,5,5,5,6,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,4,5,5,5,5,5,6,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,4,5,5,5,5,5,6,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,4,5,5,5,5,5,6,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,7,8,8,8,8,8,9,0,0,0,0,0,0,0,0,0,0,0,0]],
					[[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,1,2,2,2,2,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,4,5,5,5,5,6,0,0,0,0,0,0,0,0,0,0,0,0,1,2,2],[0,0,0,0,0,0,0,0,0,4,5,5,5,5,6,0,0,0,0,0,0,0,0,0,0,0,0,4,5,5],[0,0,0,0,0,0,0,0,0,4,5,5,5,5,6,0,0,0,0,0,0,0,0,0,0,0,0,4,5,5],[0,0,0,0,0,0,0,0,0,7,8,8,8,8,9,0,0,0,0,0,0,0,0,0,0,0,0,4,5,5],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,5,5],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,5,5],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,5,5],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,5,5],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,5,5],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,5,5],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,5,5],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,8,8]]],

	//Used for creating islands
	scrollDistance: 0,

	//How fast an island spawns in pixels
	distanceBetween: 60,

	createIsland: function() {
		//Reset scroll distance
		this.scrollDistance = 0;

		//Number used for choosing a random tilemap
		var randomNumber = Math.floor(Math.random() * this.islandTileMaps.length);

		//Retrieve random tilemap
		var tileMap = this.islandTileMaps[randomNumber];

		//Add new island to islands array
		this.islands.push(new Island(tileMap));
	},

	updateAndDrawIslands: function() {
		//Add speed to scroll distance
		this.scrollDistance += Player.speed;

		//Last created island
		var lastIsland = this.islands[this.islands.length - 1];

		//Spawns an island every 60 pixels
		if (this.scrollDistance >= lastIsland.getHeight() + this.distanceBetween) this.createIsland();

		//Loop trough all islands
		for (var i = 0; i < this.islands.length; i++) {
			var island = this.islands[i];

			//Update and draw island
			island.update();
			island.draw();
		}
	},

	checkCollision: function() {
		for (var i = 0; i < this.islands.length; i++) {
			var island = this.islands[i];

			if (player.y >= island.y &&
				Player.y + player.size <= island.x + island.getHeight()) {

				var walkable = island.checkIfWalkableTile();

				if (!walkable) return true;
			}
		}

		//Return false if no collision
		return false;
	}

};